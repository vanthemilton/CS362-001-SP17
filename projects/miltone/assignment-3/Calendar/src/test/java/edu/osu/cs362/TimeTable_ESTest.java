/*
 * This file was automatically generated by EvoSuite
 * Thu May 11 22:34:26 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import sun.util.calendar.ZoneInfo;

import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.TimeZone;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class TimeTable_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.appts;
      Appt appt0 = new Appt(5, 5, 5, 5, 5, "", "");
      //linkedList0.push(appt0);
      linkedList0.add(appt0);
      timeTable0.deleteAppt(linkedList0, appt0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      // Undeclared exception!
      try {
        timeTable0.getApptRange(linkedList0, (GregorianCalendar) null, (GregorianCalendar) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      //ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      GregorianCalendar mockGregorianCalendar0 = (GregorianCalendar)new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.appts;
      Appt appt0 = new Appt(5, 5, 5, 5, 0, "", "");
      linkedList0.add(0, (Appt) null);
      // Undeclared exception!
      try {
        timeTable0.deleteAppt(linkedList0, appt0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      //ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      GregorianCalendar mockGregorianCalendar0 = (GregorianCalendar) new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.appts;
      Appt appt0 = new Appt(5, 5, 5, 5, 5, "", "");
      linkedList0.add(appt0);
      timeTable0.deleteAppt(linkedList0, appt0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      //ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      GregorianCalendar mockGregorianCalendar0 = (GregorianCalendar) new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.appts;
      Appt appt0 = new Appt(5, 5, 0, 5, 5, "", "");
      linkedList0.add(appt0);
      Appt appt1 = new Appt(5, 5, 5, 5, 0, "", "");
      timeTable0.deleteAppt(linkedList0, appt1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Appt> linkedList0 = new LinkedList<Appt>();
      TimeTable timeTable0 = new TimeTable();
      timeTable0.deleteAppt(linkedList0, (Appt) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar();
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      Appt appt0 = new Appt((-1988), (-1988), (-1988), 0, (-1), "^b", "^b");
      timeTable0.deleteAppt(linkedList0, appt0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      Appt appt0 = new Appt(5, 5, 5, 5, 5, "", "");
      timeTable0.deleteAppt((LinkedList<Appt>) null, appt0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar((-2193), (-2193), (-2193), (-2193), (-2193));
      CalDay calDay0 = new CalDay((GregorianCalendar) mockGregorianCalendar0);
      LinkedList<Appt> linkedList0 = calDay0.getAppts();
      Appt appt0 = new Appt((-2193), (-2193), (-2193), (-2193), (-2193), "d-+Mn<4&vMrE#(?h", "d-+Mn<4&vMrE#(?h");
      linkedList0.add(appt0);
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
      GregorianCalendar mockGregorianCalendar1 = new GregorianCalendar((TimeZone) zoneInfo0);
      mockGregorianCalendar0.set((-2193), (-2193), (-2193));
      LinkedList<CalDay> linkedList1 = timeTable0.getApptRange(linkedList0, mockGregorianCalendar0, mockGregorianCalendar1);
      assertTrue(linkedList1.size() > 4000);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar(3544, 3544, 3544);
      // Undeclared exception!
      try {
        timeTable0.getApptRange((LinkedList<Appt>) null, mockGregorianCalendar0, mockGregorianCalendar0);
        fail("Expecting exception: IllegalArgumentException");

      } catch(IllegalArgumentException e) {
         //
         // Second date specified is not before the first date specified.
         //
      }
  }
/*
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeTable timeTable0 = new TimeTable();
      LinkedList<Appt> linkedList0 = new LinkedList<Appt>();
      GregorianCalendar mockGregorianCalendar0 = new GregorianCalendar((-2345), (-2345), (-2345), (-2345), (-2345), (-2345));
      GregorianCalendar mockGregorianCalendar1 = new GregorianCalendar((-2193), (-2193), (-2193), (-2193), (-2193));
      // Undeclared exception!
      try {
        timeTable0.getApptRange(linkedList0, mockGregorianCalendar0, mockGregorianCalendar1);
        fail("Expecting exception: TooManyResourcesException");

      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
      }
  }
  */
}
